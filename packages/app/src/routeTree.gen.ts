/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TopicsRouteImport } from './routes/topics'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TopicsIndexRouteImport } from './routes/topics.index'
import { Route as TopicsTopicRouteImport } from './routes/topics.$topic'
import { Route as TopicsTopicIndexRouteImport } from './routes/topics.$topic.index'
import { Route as TopicsTopicPostRouteImport } from './routes/topics.$topic.$post'
import { Route as DemosTknTextInputRouteImport } from './routes/demos.tkn.text-input'

const TopicsRoute = TopicsRouteImport.update({
  id: '/topics',
  path: '/topics',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TopicsIndexRoute = TopicsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TopicsRoute,
} as any)
const TopicsTopicRoute = TopicsTopicRouteImport.update({
  id: '/$topic',
  path: '/$topic',
  getParentRoute: () => TopicsRoute,
} as any)
const TopicsTopicIndexRoute = TopicsTopicIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TopicsTopicRoute,
} as any)
const TopicsTopicPostRoute = TopicsTopicPostRouteImport.update({
  id: '/$post',
  path: '/$post',
  getParentRoute: () => TopicsTopicRoute,
} as any)
const DemosTknTextInputRoute = DemosTknTextInputRouteImport.update({
  id: '/demos/tkn/text-input',
  path: '/demos/tkn/text-input',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/topics': typeof TopicsRouteWithChildren
  '/topics/$topic': typeof TopicsTopicRouteWithChildren
  '/topics/': typeof TopicsIndexRoute
  '/demos/tkn/text-input': typeof DemosTknTextInputRoute
  '/topics/$topic/$post': typeof TopicsTopicPostRoute
  '/topics/$topic/': typeof TopicsTopicIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/topics': typeof TopicsIndexRoute
  '/demos/tkn/text-input': typeof DemosTknTextInputRoute
  '/topics/$topic/$post': typeof TopicsTopicPostRoute
  '/topics/$topic': typeof TopicsTopicIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/topics': typeof TopicsRouteWithChildren
  '/topics/$topic': typeof TopicsTopicRouteWithChildren
  '/topics/': typeof TopicsIndexRoute
  '/demos/tkn/text-input': typeof DemosTknTextInputRoute
  '/topics/$topic/$post': typeof TopicsTopicPostRoute
  '/topics/$topic/': typeof TopicsTopicIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/topics'
    | '/topics/$topic'
    | '/topics/'
    | '/demos/tkn/text-input'
    | '/topics/$topic/$post'
    | '/topics/$topic/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/topics'
    | '/demos/tkn/text-input'
    | '/topics/$topic/$post'
    | '/topics/$topic'
  id:
    | '__root__'
    | '/'
    | '/topics'
    | '/topics/$topic'
    | '/topics/'
    | '/demos/tkn/text-input'
    | '/topics/$topic/$post'
    | '/topics/$topic/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TopicsRoute: typeof TopicsRouteWithChildren
  DemosTknTextInputRoute: typeof DemosTknTextInputRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/topics': {
      id: '/topics'
      path: '/topics'
      fullPath: '/topics'
      preLoaderRoute: typeof TopicsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/topics/': {
      id: '/topics/'
      path: '/'
      fullPath: '/topics/'
      preLoaderRoute: typeof TopicsIndexRouteImport
      parentRoute: typeof TopicsRoute
    }
    '/topics/$topic': {
      id: '/topics/$topic'
      path: '/$topic'
      fullPath: '/topics/$topic'
      preLoaderRoute: typeof TopicsTopicRouteImport
      parentRoute: typeof TopicsRoute
    }
    '/topics/$topic/': {
      id: '/topics/$topic/'
      path: '/'
      fullPath: '/topics/$topic/'
      preLoaderRoute: typeof TopicsTopicIndexRouteImport
      parentRoute: typeof TopicsTopicRoute
    }
    '/topics/$topic/$post': {
      id: '/topics/$topic/$post'
      path: '/$post'
      fullPath: '/topics/$topic/$post'
      preLoaderRoute: typeof TopicsTopicPostRouteImport
      parentRoute: typeof TopicsTopicRoute
    }
    '/demos/tkn/text-input': {
      id: '/demos/tkn/text-input'
      path: '/demos/tkn/text-input'
      fullPath: '/demos/tkn/text-input'
      preLoaderRoute: typeof DemosTknTextInputRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface TopicsTopicRouteChildren {
  TopicsTopicPostRoute: typeof TopicsTopicPostRoute
  TopicsTopicIndexRoute: typeof TopicsTopicIndexRoute
}

const TopicsTopicRouteChildren: TopicsTopicRouteChildren = {
  TopicsTopicPostRoute: TopicsTopicPostRoute,
  TopicsTopicIndexRoute: TopicsTopicIndexRoute,
}

const TopicsTopicRouteWithChildren = TopicsTopicRoute._addFileChildren(
  TopicsTopicRouteChildren,
)

interface TopicsRouteChildren {
  TopicsTopicRoute: typeof TopicsTopicRouteWithChildren
  TopicsIndexRoute: typeof TopicsIndexRoute
}

const TopicsRouteChildren: TopicsRouteChildren = {
  TopicsTopicRoute: TopicsTopicRouteWithChildren,
  TopicsIndexRoute: TopicsIndexRoute,
}

const TopicsRouteWithChildren =
  TopicsRoute._addFileChildren(TopicsRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TopicsRoute: TopicsRouteWithChildren,
  DemosTknTextInputRoute: DemosTknTextInputRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

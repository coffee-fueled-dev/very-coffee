/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as BlogRouteImport } from './routes/blog'
import { Route as IndexRouteImport } from './routes/index'
import { Route as BlogIndexRouteImport } from './routes/blog.index'
import { Route as BlogSplatRouteImport } from './routes/blog.$'
import { Route as DemosTknTextInputRouteImport } from './routes/demos.tkn.text-input'

const BlogRoute = BlogRouteImport.update({
  id: '/blog',
  path: '/blog',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogIndexRoute = BlogIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => BlogRoute,
} as any)
const BlogSplatRoute = BlogSplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => BlogRoute,
} as any)
const DemosTknTextInputRoute = DemosTknTextInputRouteImport.update({
  id: '/demos/tkn/text-input',
  path: '/demos/tkn/text-input',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/blog': typeof BlogRouteWithChildren
  '/blog/$': typeof BlogSplatRoute
  '/blog/': typeof BlogIndexRoute
  '/demos/tkn/text-input': typeof DemosTknTextInputRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/blog/$': typeof BlogSplatRoute
  '/blog': typeof BlogIndexRoute
  '/demos/tkn/text-input': typeof DemosTknTextInputRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/blog': typeof BlogRouteWithChildren
  '/blog/$': typeof BlogSplatRoute
  '/blog/': typeof BlogIndexRoute
  '/demos/tkn/text-input': typeof DemosTknTextInputRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/blog' | '/blog/$' | '/blog/' | '/demos/tkn/text-input'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/blog/$' | '/blog' | '/demos/tkn/text-input'
  id:
    | '__root__'
    | '/'
    | '/blog'
    | '/blog/$'
    | '/blog/'
    | '/demos/tkn/text-input'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BlogRoute: typeof BlogRouteWithChildren
  DemosTknTextInputRoute: typeof DemosTknTextInputRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/blog': {
      id: '/blog'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog/': {
      id: '/blog/'
      path: '/'
      fullPath: '/blog/'
      preLoaderRoute: typeof BlogIndexRouteImport
      parentRoute: typeof BlogRoute
    }
    '/blog/$': {
      id: '/blog/$'
      path: '/$'
      fullPath: '/blog/$'
      preLoaderRoute: typeof BlogSplatRouteImport
      parentRoute: typeof BlogRoute
    }
    '/demos/tkn/text-input': {
      id: '/demos/tkn/text-input'
      path: '/demos/tkn/text-input'
      fullPath: '/demos/tkn/text-input'
      preLoaderRoute: typeof DemosTknTextInputRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface BlogRouteChildren {
  BlogSplatRoute: typeof BlogSplatRoute
  BlogIndexRoute: typeof BlogIndexRoute
}

const BlogRouteChildren: BlogRouteChildren = {
  BlogSplatRoute: BlogSplatRoute,
  BlogIndexRoute: BlogIndexRoute,
}

const BlogRouteWithChildren = BlogRoute._addFileChildren(BlogRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BlogRoute: BlogRouteWithChildren,
  DemosTknTextInputRoute: DemosTknTextInputRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
